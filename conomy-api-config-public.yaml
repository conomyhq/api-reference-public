swagger: '2.0'
info:
  title: "Conomy Developers \U0001F4D9 API Reference"
  description: "This is Conomy Developers, the portal where you cand find our API Reference with everything you need to use our APIs. We've tried to build a friendly documentation.\nIf you have any doubt please don't hesitate to reach us at hola@conomyhq.com. We hope you enjoy this site \U0001F44B."
  version: 1.0.0
  contact:
    email: hola@conomyhq.com
    name: Conomy app
host: api.conomy.app
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  firebase:
    authorizationUrl: ''
    flow: implicit
    type: oauth2
    x-google-issuer: 'https://securetoken.google.com/conomy-6cc91'
    x-google-jwks_uri: 'https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com'
    x-google-audiences: conomy-6cc91
    description: 'We have a firebase authentication, to have access to an API Key available for QA environment please just contact us at hola@conomyhq.com.'
paths:
  /v1/addresses:
    get:
      tags:
        - Address
      summary: "Get an address from specific user \U0001F50E"
      operationId: getAddress
      description: Search an address by it's user id.
      x-google-backend:
        address: 'https://conomy-address-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      parameters:
        - name: user_id
          in: query
          description: User id
          type: string
          required: true
      responses:
        '200':
          description: Search results matching criteria sent in the request parapameters.
          schema:
            type: array
            items:
              $ref: '#/definitions/Address'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  /v1/cards:
    get:
      tags:
        - Card
      summary: "Get cards by user id  \U0001F4B3"
      operationId: getCardByUserId
      description: Get a list of cards filtered by owner's user id.
      security:
        - api_key: []
      x-google-backend:
        address: 'https://conomy-card-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - name: user_id
          in: query
          description: User id
          type: string
          required: true
        - name: active
          in: query
          description: User id
          type: boolean
          required: false
      responses:
        '200':
          description: Fetch cards filtered by owner's user id.
          schema:
            type: array
            items:
              $ref: '#/definitions/Card'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  /v1/transactions:
    get:
      tags:
        - Transaction
      summary: "Get a list of card's transactions \U0001F4D6"
      description: List of transaction filtered by card number and user id.
      operationId: GetTransactionsSearch
      security:
        - api_key: []
      x-google-backend:
        address: 'https://conomy-transaction-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: query
          name: card_id
          type: string
          required: true
          description: Card id
      responses:
        '200':
          description: Transactions filtered
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  /v1/transactions/categories:
    get:
      tags:
        - Transaction Categories
      summary: "Get a list of transactions categories \U0001F3F7️"
      description: List of transaction categories with its agreggation sum filtered by date and user id.
      operationId: GetTransactionsCategories
      security:
        - api_key: []
      x-google-backend:
        address: 'https://conomy-transaction-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: query
          name: user_id
          type: string
          required: true
          description: User uid
        - in: query
          name: start_date
          type: string
          format: date-time
          required: true
          description: star Date
        - in: query
          name: end_date
          type: string
          format: date-time
          required: true
          description: end Date
      responses:
        '200':
          description: Transactions categories filtered
          schema:
            type: array
            items:
              $ref: '#/definitions/CategoryItem'
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
        400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
  /v1/users:
    get:
      tags:
        - User
      summary: "Get a list of all users \U0001F603"
      operationId: getUsers
      description: Get a list of users registered in the db.
      security:
        - api_key: []
      x-google-backend:
        address: 'https://conomy-user-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      responses:
        '200':
          description: List users from the db.
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  '/v1/users/{user_id}':
    get:
      tags:
        - User
      summary: "Get a specific user \U0001F60A"
      operationId: getUser
      description: Get a specific user data searching by its unique user id.
      security:
        - api_key: []
      x-google-backend:
        address: 'https://conomy-user-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - name: user_id
          in: path
          description: User ID
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: search results matching criteria
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
definitions:
  Address:
    type: object
    required:
      - id
      - user_id
      - region
      - commune
      - first_address
      - optional_address
    properties:
      id:
        type: string
        format: uuid
        example: d04882ef-cf1a-40c9-b571-a6b4fa3514fd
      user_id:
        type: string
        format: uuid
        example: d04882ef-cf1a-40c9-b571-a6b4fa3514fd
      region:
        type: string
        example: Valparaiso
      commune:
        type: string
        example: ConCon
      first_address:
        type: string
        example: Los Pillines
      optional_address:
        type: string
        example: '340'
    description: This is a model to represent user address
  Card:
    type: object
    properties:
      _id:
        type: string
        format: uuid
        example: 96daafcf-9f83-4c2c-8706-eb557e20c23c
      user_id:
        type: string
        format: uuid
        example: 96daafcf-9f83-4c2c-8706-eb557e20c23c
      card_issuer:
        type: string
        example: BancoDeChile
        description: Issuing Bank
      card_brand:
        type: string
        example: MasterCard
      holder_card_name:
        type: string
        example: Pablo insulza
      card_number:
        type: string
        example: '************1234'
        description: Obfuscated card number
      currency:
        type: string
        example: CLP
        description: Card Currency
      is_active:
        type: boolean
        example: false
        description: Card state
      created_at:
        type: string
        format: date-time
        example: '2017-07-21T17:32:28Z'
      updated_at:
        type: string
        format: date-time
        example: '2017-07-21T17:32:28Z'
      description:
        type: object
    required:
      - _id
      - card_issuer
      - card_brand
      - holder_card_name
      - card_number
      - currency
      - is_active
      - created_at
      - updated_at
      - description
  Transaction:
    type: object
    properties:
      _id:
        type: string
        format: uuid
        example: 96daafcf-9f83-4c2c-8706-eb557e20c23c
      card_id:
        type: string
        format: uuid
        example: 96daafcf-9f83-4c2c-8706-eb557e20c23c
      title:
        type: string
        example: clothes
      type:
        type: string
        example: bars&restaurants
      amount:
        type: number
        format: float
        example: -196690
      currency:
        type: string
        example: CLP
      transaction_date:
        type: integer
        example: 1616021369
      expanded:
        $ref: '#/definitions/ExpandedInfo'
      created_at:
        type: string
        format: date-time
        example: '2017-07-21T17:32:28Z'
      updated_at:
        type: string
        format: date-time
        example: '2017-07-21T17:32:28Z'
    required:
      - _id
      - title
      - type
      - amount
      - currency
      - transaction_date
      - expanded
      - created_at
      - updated_at
  ExpandedInfo:
    type: object
    properties:
      location:
        type: string
        example: 'Santiago, Chile'
      recipit:
        type: string
        example: url
      score:
        type: number
        format: float
        example: 3.5
      analytics:
        type: array
        items:
          type: string
          example: analytic Text
  CategoryItem:
    type: object
    properties:
      type:
        type: string
        description: type descriptor
        example: pharmacy
      total:
        type: number
        description: total sum of category transactions
        example: -30000
  User:
    type: object
    required:
      - user_id
      - name
      - last_name
      - rut
      - account
    properties:
      user_id:
        type: string
        format: uuid
        example: b92e761a-279a-11ec-9621-0242ac130002
      name:
        type: string
        example: Mauricio
      nick_name:
        type: string
        example: JFT
      last_name:
        type: string
        example: Gatica
      rut:
        type: string
        example: 12.612.412-2
      phone:
        type: string
        example: '+5691238159123'
      account:
        type: string
        example: user
      password_pin:
        type: string
        example: '2424'
consumes:
  - application/json
