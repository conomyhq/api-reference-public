swagger: '2.0'
info:
  title: "Conomy Developers \U0001F4D9 API Reference"
  description: "This is **Conomy Developers**, the portal where you cand find our API Reference with everything you need to use our APIs. We've tried to build a friendly documentation, if you have any doubt please don't hesitate to reach us out at hola@conomyhq.com. We hope you enjoy this site \U0001F44B.\n\nCurrently we have a microservices backend architecture serving for different purposes. You can find their description in the left menu with the detail of each of their specific endpoints.\n\n**Addresses Service**: Users addresses information, you can fetch address data with its specific user id, bringing parameters like region, commune, first_address and an optional description address.\n\n**Cards Service**: Cards information, search and match any card that is owned by specific user id and respond an array of card objects. \n\n**Transactions Service**: This service provides transactions information, you can fetch transaction data with its specific card id, bringing parameters like title, amount, currency among others.\n\n**Users Service**: This service provides users information, with its user id you can get all the user data and also make some changes to its personal information.\n\n**Authorization Service**: This service lets the user to have its private pin, letting him take control over his personal data with a configured pin pass. \n\n**Others...*"
  version: 1.0.0
  contact:
    email: hola@conomyhq.com
    name: Conomy app
host: api.conomy.app
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  firebase:
    authorizationUrl: ''
    flow: implicit
    type: oauth2
    x-google-issuer: 'https://securetoken.google.com/conomy-6cc91'
    x-google-jwks_uri: 'https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com'
    x-google-audiences: conomy-6cc91
    description: 'We have a firebase authentication, to have access to an API Key available for QA environment please just contact us at hola@conomyhq.com.'
paths:
  /v1/addresses:
    post:
      tags:
        - Address
      summary: "Add an address to a specific user in the system \U0001F3E1"
      operationId: addAddress
      description: 'The Address service delivers users address. The /addresses endpoint with POST method adds an address to a specific user id, setting its attributes like region, commune, first address and an optional address.'
      consumes:
        - application/json
      x-google-backend:
        address: 'https://conomy-address-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - firebase: []
      parameters:
        - in: body
          name: Address
          description: Address to add
          schema:
            $ref: '#/definitions/AddressCreate'
      responses:
        '201':
          description: Item created
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
    get:
      tags:
        - Address
      summary: "Get an address from specific user \U0001F50E"
      operationId: getAddress
      description: 'The Address service delivers users address. The /addresses endpoint search an address by it''s user id and respond a body with an array of address objects. Its properties are an unique id, the user id and the description of the address, including region, commune, first_address and an optional description address.'
      x-google-backend:
        address: 'https://conomy-address-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      parameters:
        - name: user_id
          in: query
          description: User id
          type: string
          required: true
      responses:
        '200':
          description: Search results matching criteria sent in the request parapameters.
          schema:
            type: array
            items:
              $ref: '#/definitions/Address'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
    put:
      tags:
        - Address
      summary: "Modify an address from a specific user \U0001F3D8️."
      operationId: modifyAddress
      description: 'The Address service delivers users address. The /addresses endpoint with PUT method modify the address of specific user id, being able to modify attributes like region, commune, first address and an optional address.'
      consumes:
        - application/json
      x-google-backend:
        address: 'https://conomy-address-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - firebase: []
      parameters:
        - name: user_id
          in: query
          description: User ID
          type: string
          required: true
        - in: body
          name: Address
          description: Address to add
          schema:
            $ref: '#/definitions/AddressModify'
      responses:
        '201':
          description: address created
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  /v1/cards:
    post:
      tags:
        - Card
      summary: "Create a card and add to a specific user \U0001F45B"
      operationId: createCard
      description: 'The Cards service delivers cards data. The /cards endpoint with POST method adds a card owned by a specific user id and save it on an array of card objects, which includes all its cards attributes.'
      consumes:
        - application/json
      security:
        - firebase: []
      x-google-backend:
        address: 'https://conomy-card-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: body
          name: Card
          description: Card schema
          schema:
            $ref: '#/definitions/CardCreate'
      responses:
        '201':
          description: Card information
          schema:
            $ref: '#/definitions/Card'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
    get:
      tags:
        - Card
      summary: "Get cards by user id  \U0001F4B3"
      operationId: getCardByUserId
      description: |
        The Cards service delivers cards data. The /cards endpoint search and match any card that is owned by specific user id and respond an array of card objects. Its response properties are an unique card id, the card owner user id, the card issuer which is the issuing bank, card brand (e.g. VISA), holder card name which is the name written in the card, obfuscated card number, the card currency and if the card is active or not, also has a description and last updated date.
      security:
        - api_key: []
      x-google-backend:
        address: 'https://conomy-card-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - name: user_id
          in: query
          description: User id
          type: string
          required: true
        - name: active
          in: query
          description: User id
          type: boolean
          required: false
      responses:
        '200':
          description: Fetch cards filtered by owner's user id.
          schema:
            type: array
            items:
              $ref: '#/definitions/Card'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  '/v1/cards/{card_id}':
    put:
      tags:
        - Card
      summary: "Set to active a specific card of a user \U0001F4CC"
      operationId: UpdateActiveCard
      description: The Cards service delivers cards data. The /cards endpoint with PUT method set one card to "active state" among all user id cards. This means that specific user is going to process all its payments with that active card and omit the others for any payment.
      consumes:
        - application/json
      security:
        - firebase: []
      x-google-backend:
        address: 'https://conomy-card-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - name: card_id
          in: path
          description: Card ID from db
          type: string
          format: uuid
          required: true
        - name: active
          in: query
          description: property if search active cards or not
          type: boolean
          required: true
      responses:
        '204':
          description: 'No Content, just a 204 status'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  /v1/transactions:
    post:
      tags:
        - Transaction
      summary: "Create a transaction for a specific card \U0001F4DD"
      description: The Transactions service provides transactions information. The /transactions endpoint with a POST method creates a transaction in the db for a specific card and user id.
      operationId: CreateTransactions
      security:
        - firebase: []
      x-google-backend:
        address: 'https://conomy-transaction-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: body
          name: Transaction
          description: Transaction schema
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '201':
          description: Transaction created
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
    get:
      tags:
        - Transaction
      summary: "Get a list of a card's transactions \U0001F4D6"
      description: 'The Transactions service provides transactions information. The /transactions endpoint with a GET method list transactions filtered by a card number and its user id, sending an array of transactions with its amount, currency and other data.'
      operationId: GetTransactionsSearch
      security:
        - api_key: []
      x-google-backend:
        address: 'https://conomy-transaction-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: query
          name: card_id
          type: string
          required: true
          description: Card id
      responses:
        '200':
          description: Transactions filtered
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  '/v1/transactions/{transaction_id}':
    put:
      tags:
        - Transaction
      summary: "Modify a transaction for specifics card and user id \U0001F4CB"
      operationId: ModifyTransaction
      description: The Transactions service provides transactions information. The /transactions endpoint with a PUT method allows to modify customizable fields for a specific transaction.
      consumes:
        - application/json
      security:
        - firebase: []
      x-google-backend:
        address: 'https://conomy-transaction-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - name: transaction_id
          in: path
          description: transaction ID
          type: string
          format: uuid
          required: true
        - in: body
          name: Transaction
          description: Transaction schema
          schema:
            $ref: '#/definitions/TransactionModify'
      responses:
        '200':
          description: Succes modified
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  /v1/transactions/categories:
    get:
      tags:
        - Transaction Categories
      summary: "Get a list of transactions categories \U0001F3F7️"
      description: The Transactions service provides transactions information. The /transactions/categories endpoint with a GET method list transaction categories with its agreggation sum filtered by date and user id.
      operationId: GetTransactionsCategories
      security:
        - api_key: []
      x-google-backend:
        address: 'https://conomy-transaction-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: query
          name: user_id
          type: string
          required: true
          description: User uid
        - in: query
          name: start_date
          type: string
          format: date-time
          required: true
          description: star Date
        - in: query
          name: end_date
          type: string
          format: date-time
          required: true
          description: end Date
      responses:
        '200':
          description: Transactions categories filtered
          schema:
            type: array
            items:
              $ref: '#/definitions/CategoryItem'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  /v1/users:
    post:
      tags:
        - User
      summary: "Create a new user in the db \U0001F929"
      operationId: addUser
      description: 'The Users services provides user information. The /users endpoint with a POST method register a new user in the db with its personal information such as name, last name, national id, phone among other data.'
      consumes:
        - application/json
      security:
        - firebase: []
      x-google-backend:
        address: 'https://conomy-user-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: body
          name: User
          description: User schema
          schema:
            $ref: '#/definitions/UserCreate'
      responses:
        '201':
          description: matching user
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
    get:
      tags:
        - User
      summary: "Get a list of all users \U0001F603"
      operationId: getUsers
      description: 'The Users service provides user information. The /users endpoint with a GET method list all users registered in the db with its personal information such as name, last name, national id, phone among other data.'
      security:
        - api_key: []
      x-google-backend:
        address: 'https://conomy-user-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      responses:
        '200':
          description: List users from the db.
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  '/v1/users/{user_id}':
    get:
      tags:
        - User
      summary: "Get a specific user \U0001F60A"
      operationId: getUser
      description: 'The Users service provides user information. The /users/{user_id} endpoint with a GET method fetch a specific user by its user id from the db with its personal information such as name, last name, national id, phone among other data.'
      security:
        - api_key: []
      x-google-backend:
        address: 'https://conomy-user-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - name: user_id
          in: path
          description: User ID
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: search results matching criteria
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
    put:
      tags:
        - User
      summary: "Update an user in the db by its user id \U0001F62C"
      operationId: updateUser
      description: 'The Users service provides user information. The /users/{user_id} endpoint with a PUT method modify a specific user by its user id in the db.'
      consumes:
        - application/json
      security:
        - firebase: []
      x-google-backend:
        address: 'https://conomy-user-service-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - name: user_id
          in: path
          description: User ID
          type: string
          format: uuid
          required: true
        - in: body
          name: User
          description: User to be updated
          schema:
            $ref: '#/definitions/UserModify'
      responses:
        '201':
          description: user created
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  /v1/pin/authorization:
    post:
      tags:
        - Auth
      summary: "Validate pin authentication for a specific user id \U0001F510"
      operationId: ValidatePin
      description: The Pin service provides user's password information. The /pin/authorization endpoint with a POST validates user's pin against the value saved in the db. This gives the user the permission to gain access for different information inside the app and the permission to realize more personal actions.
      security:
        - firebase: []
      x-google-backend:
        address: 'https://auth-service-conomy-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: body
          name: Token
          description: Token to be matched
          schema:
            $ref: '#/definitions/UserPin'
      responses:
        '200':
          description: search results matching criteria
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
  /v1/pin:
    post:
      summary: "Create a new pin linked to a specific user id \U0001F511"
      x-google-backend:
        address: 'https://auth-service-conomy-h4gib2s4ya-uc.a.run.app'
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - firebase: []
      parameters:
        - in: body
          name: Token
          description: Token to be matched
          schema:
            $ref: '#/definitions/UserPin'
      tags:
        - Auth
        - Pin
      responses:
        '201':
          description: 'Ok, pin created'
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: CreatePin
      description: The Pin service provides user's password information. The /pin endpoint with a POST creates a user's pin and save it in the db. This gives the user the permission to gain access for different information and have more control over his personal data.
  '/v1/termsconditions/{user_id}':
    get:
      summary: "Get user's terms & conditions \U0001F4C3"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getTermsConditions
      tags:
        - Terms & Conditions
    post:
      summary: "Store user's terms & conditions \U0001F4C4"
      operationId: postTermsConditions
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      tags:
        - Terms & Conditions
    parameters:
      - type: string
        name: user_id
        in: path
        required: true
  /v1/auth/sms:
    get:
      summary: "User's verification with sms\U0001F4F1"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getSmsNotification
      tags:
        - Auth Notifications
      description: ''
    parameters: []
  /v1/notifications:
    get:
      summary: "User's notification from any alert \U0001F6A8"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getNotifications
      description: ''
      tags:
        - Notifications
    parameters: []
  /v1/cards/composite:
    get:
      summary: "Get all type of cards (bank cards, gift cards & benefit cards) \U0001F4B8"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getAllCards
      description: ''
      tags:
        - Card
    parameters: []
  /v1/conomycards/composite:
    get:
      summary: "Get all the information of a specific Conomy Card \U0001F4B3"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getConomyCard
      description: ''
      tags:
        - Conomy Card
    parameters: []
  /v1/conomycards/budget:
    get:
      summary: "Get the budget of a specific Conomy Card \U0001F4CA"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getBudget
      description: ''
      tags:
        - Conomy Card
    parameters: []
  /v1/conomycards/rules:
    get:
      summary: "Get the rules of a specific Conomy Card \U0001F4B3"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getRules
      description: ''
      tags:
        - Conomy Card
    parameters: []
  /v1/transactions/composite:
    get:
      summary: "Get categorized transactions \U0001F516"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getCategorizedTransactions
      description: ''
      tags:
        - Transaction
    parameters: []
  /v1/transactions/balances:
    get:
      summary: Get card balances by its transactions ⚖️
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getBalances
      description: ''
      tags:
        - Transaction
    parameters: []
  /v1/transactions/transactionview:
    get:
      summary: "Get a list of last transactions \U0001F4C8"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getTransactionView
      description: ''
      tags:
        - Transaction
    parameters: []
  /v1/transactions/classifier:
    get:
      summary: "Get transactions categories \U0001F5E0"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getCategorizedTransactions
      description: ''
      tags:
        - Transaction
    parameters: []
  /v1/financialliteracy:
    get:
      summary: "Get financial literacy \U0001F469‍\U0001F393"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getFinancialLiteracy
      description: ''
      tags:
        - Financial Literacy
    parameters: []
  /v1/rewards:
    get:
      summary: "Get user rewards \U0001F911"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getRewards
      description: ''
      tags:
        - Rewards
    parameters: []
  /v1/customerservices:
    get:
      summary: "Integration with customer services \U0001F469‍\U0001F4BC"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getCustomerServices
      description: ''
      tags:
        - Customer Services
    parameters: []
  /v1/auth:
    get:
      summary: "Transaction auth \U0001F511"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: getTransactionAuth
      description: ''
      tags:
        - Transaction Auth
    parameters: []
  /v1/switch:
    get:
      summary: "Transaction switch \U0001F511"
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '400':
          description: Bad Request - A required parameter for this API operation is invalid or has not been provided.
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
            properties:
              error:
                type: object
                required:
                  - detail
                  - type
                  - code
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
            required:
              - error
          examples:
            example-1:
              value:
                error:
                  detail: A required parameter for this API operation is invalid or has not been provided
                  type: GenericError
                  code: 3
        '401':
          description: Invalid or missing authentication token.
          examples:
            example-1:
              value:
                message: Jwt is missing
                code: 401
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Jwt is missing
                code: 401
        '404':
          description: Data not found in the DB.
          examples:
            example-1:
              value:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
          schema:
            description: ''
            type: object
            properties:
              error:
                type: object
                properties:
                  detail:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  code:
                    type: number
                required:
                  - detail
                  - type
                  - code
            required:
              - error
            x-examples:
              example-1:
                error:
                  detail: The user could not be found in the DB
                  type: AddressesError
                  code: 34
        '500':
          description: Internal server error.
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
              code:
                type: number
            required:
              - message
              - code
            x-examples:
              example-1:
                message: Internal Server Error
                code: 500
          examples:
            example-1:
              value:
                message: Internal Server Error
                code: 500
      operationId: transactionSwitch
      description: ''
      tags:
        - Transaction Switch
    parameters: []
definitions:
  Address:
    type: object
    required:
      - id
      - user_id
      - region
      - commune
      - first_address
      - optional_address
    properties:
      id:
        type: string
        format: uuid
        example: d04882ef-cf1a-40c9-b571-a6b4fa3514fd
      user_id:
        type: string
        format: uuid
        example: d04882ef-cf1a-40c9-b571-a6b4fa3514fd
      region:
        type: string
        example: Valparaiso
      commune:
        type: string
        example: ConCon
      first_address:
        type: string
        example: Los Pillines
      optional_address:
        type: string
        example: '340'
    description: This is a model to represent user address
  AddressModify:
    type: object
    properties:
      region:
        type: string
        example: Valparaiso
      commune:
        type: string
        example: ConCon
      first_address:
        type: string
        example: Los Pillines
      optional_address:
        type: string
        example: '340'
  AddressCreate:
    type: object
    required:
      - user_id
      - region
      - commune
      - first_address
      - optional_address
    properties:
      user_id:
        type: string
        format: uuid
        example: d04882ef-cf1a-40c9-b571-a6b4fa3514fd
      region:
        type: string
        example: Valparaiso
      commune:
        type: string
        example: ConCon
      first_address:
        type: string
        example: Los Pillines
      optional_address:
        type: string
        example: '340'
  Card:
    type: object
    properties:
      _id:
        type: string
        format: uuid
        example: 96daafcf-9f83-4c2c-8706-eb557e20c23c
      user_id:
        type: string
        format: uuid
        example: 96daafcf-9f83-4c2c-8706-eb557e20c23c
      card_issuer:
        type: string
        example: BancoDeChile
        description: Issuing Bank
      card_brand:
        type: string
        example: MasterCard
      holder_card_name:
        type: string
        example: Pablo insulza
      card_number:
        type: string
        example: '************1234'
        description: Obfuscated card number
      currency:
        type: string
        example: CLP
        description: Card Currency
      is_active:
        type: boolean
        example: false
        description: Card state
      created_at:
        type: string
        format: date-time
        example: '2017-07-21T17:32:28Z'
      updated_at:
        type: string
        format: date-time
        example: '2017-07-21T17:32:28Z'
      description:
        type: object
    required:
      - _id
      - card_issuer
      - card_brand
      - holder_card_name
      - card_number
      - currency
      - is_active
      - created_at
      - updated_at
      - description
  CardCreate:
    type: object
    required:
      - user_id
      - card_name
      - card_issuer
      - card_brand
      - holder_card_name
      - owner_card_name
      - card_number
      - spent
      - currency
      - is_conomy
      - created_at
    properties:
      _id:
        type: string
        format: uuid
        example: 96daafcf-9f83-4c2c-8706-eb557e20c23c
      card_issuer:
        type: string
        example: BancoDeChile
        description: Issuing Bank
      card_brand:
        type: string
        example: MasterCard
      holder_card_name:
        type: string
        example: Pablo insulza
      card_number:
        type: string
        example: '************1234'
        description: Obfuscated card number
      currency:
        type: string
        example: CLP
        description: Card Currency
      is_active:
        type: boolean
        example: false
        description: Card state
      created_at:
        type: string
        format: date-time
        example: '2017-07-21T17:32:28Z'
      updated_at:
        type: string
        format: date-time
        example: '2017-07-21T17:32:28Z'
      description:
        type: object
  Transaction:
    type: object
    properties:
      _id:
        type: string
        format: uuid
        example: 96daafcf-9f83-4c2c-8706-eb557e20c23c
      card_id:
        type: string
        format: uuid
        example: 96daafcf-9f83-4c2c-8706-eb557e20c23c
      title:
        type: string
        example: clothes
      type:
        type: string
        example: bars&restaurants
      amount:
        type: number
        format: float
        example: -196690
      currency:
        type: string
        example: CLP
      transaction_date:
        type: integer
        example: 1616021369
      expanded:
        $ref: '#/definitions/ExpandedInfo'
      created_at:
        type: string
        format: date-time
        example: '2017-07-21T17:32:28Z'
      updated_at:
        type: string
        format: date-time
        example: '2017-07-21T17:32:28Z'
    required:
      - _id
      - title
      - type
      - amount
      - currency
      - transaction_date
      - expanded
      - created_at
      - updated_at
  TransactionModify:
    type: object
    properties:
      title:
        type: string
        example: clothes
      type:
        type: string
        example: bars&restaurants
      amount:
        type: number
        format: float
        example: -196690
      currency:
        type: string
        example: CLP
  ExpandedInfo:
    type: object
    properties:
      location:
        type: string
        example: 'Santiago, Chile'
      recipit:
        type: string
        example: url
      score:
        type: number
        format: float
        example: 3.5
      analytics:
        type: array
        items:
          type: string
          example: analytic Text
  CategoryItem:
    type: object
    properties:
      type:
        type: string
        description: type descriptor
        example: pharmacy
      total:
        type: number
        description: total sum of category transactions
        example: -30000
  User:
    type: object
    required:
      - user_id
      - name
      - last_name
      - rut
      - account
    properties:
      user_id:
        type: string
        format: uuid
        example: b92e761a-279a-11ec-9621-0242ac130002
      name:
        type: string
        example: Mauricio
      nick_name:
        type: string
        example: JFT
      last_name:
        type: string
        example: Gatica
      rut:
        type: string
        example: 12.612.412-2
      phone:
        type: string
        example: '+5691238159123'
      account:
        type: string
        example: user
      password_pin:
        type: string
        example: '2424'
  UserModify:
    type: object
    properties:
      name:
        type: string
        example: Mauricio
      nick_name:
        type: string
        example: JFT
      last_name:
        type: string
        example: Gatica
      rut:
        type: string
        example: 12.612.412-2
      phone:
        type: string
        example: '+5691238159123'
  UserCreate:
    type: object
    required:
      - user_id
      - name
      - last_name
      - rut
      - account
    properties:
      user_id:
        type: string
        format: uuid
        example: b92e761a-279a-11ec-9621-0242ac130002
      name:
        type: string
        example: Mauricio
      last_name:
        type: string
        example: Gatica
      rut:
        type: string
        example: 12.612.412-2
      account:
        type: string
        example: user
  UserPin:
    type: object
    title: UserPin
    properties:
      user_id:
        type: string
        format: uuid
        example: b92e761a-279a-11ec-9621-0242ac130002
        description: Firebase ID
      password_pin:
        type: string
        example: vK6q83OnsWqRCN3C37Ikl/T4DwWpnumo1CR305oEkkhRdp4ua6TJeif309Es0x9t7snE04hu48eLw5zSVg/+y5rWNPBFg4rnka6j0btuD3htbdkm8emx+d6JcOk8/xlIWr4ifZvF5t5fuj2fqWZzgDxnF5TJxWWLETHGCl1FduK3rZj4Yh6MtoYjhqqVVuFaXwoZEka77K5HO2sQ11l03qnbAk+cV+ZjNyAD24Qgi+wrRG0pGJ3BHUy7K0jF1umKCJDd8ILfM7GD1/+fuTU4RMMJ0PFpbKnMp3kTSwwTpSJ0j3tgchXvfTc4sAx/aQgdVerdHnhFSMnoVbsV/TiBRg==
      created_at:
        type: string
      updated_at:
        type: string
    required:
      - user_id
      - password_pin
consumes:
  - application/json
